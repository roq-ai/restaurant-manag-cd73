openapi: 3.1.0
info:
  title: ZenStack Generated API
  version: 1.0.0
tags:
  - name: menu
    description: menu operations
  - name: order
    description: order operations
  - name: reservation
    description: reservation operations
  - name: restaurant
    description: restaurant operations
  - name: review
    description: review operations
  - name: user
    description: user operations
components:
  schemas:
    MenuScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - description
        - price
        - category
        - restaurant_id
        - created_at
        - updated_at
    OrderScalarFieldEnum:
      type: string
      enum:
        - id
        - date
        - total_price
        - status
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    ReservationScalarFieldEnum:
      type: string
      enum:
        - id
        - date
        - time
        - number_of_people
        - table_number
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    RestaurantScalarFieldEnum:
      type: string
      enum:
        - id
        - description
        - address
        - opening_hours
        - closing_hours
        - name
        - created_at
        - updated_at
        - user_id
        - tenant_id
    ReviewScalarFieldEnum:
      type: string
      enum:
        - id
        - rating
        - comment
        - date
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - email
        - firstName
        - lastName
        - roq_user_id
        - tenant_id
        - created_at
        - updated_at
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    Menu:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/Restaurant"
      required:
        - id
        - name
        - restaurant_id
        - created_at
        - updated_at
        - restaurant
    Order:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - restaurant
        - user
    Reservation:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - restaurant
        - user
    Restaurant:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        menu:
          type: array
          items:
            $ref: "#/components/schemas/Menu"
        order:
          type: array
          items:
            $ref: "#/components/schemas/Order"
        reservation:
          type: array
          items:
            $ref: "#/components/schemas/Reservation"
        user:
          $ref: "#/components/schemas/User"
        review:
          type: array
          items:
            $ref: "#/components/schemas/Review"
      required:
        - id
        - name
        - created_at
        - updated_at
        - user_id
        - tenant_id
        - user
    Review:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - restaurant
        - user
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          type: array
          items:
            $ref: "#/components/schemas/Order"
        reservation:
          type: array
          items:
            $ref: "#/components/schemas/Reservation"
        restaurant:
          type: array
          items:
            $ref: "#/components/schemas/Restaurant"
        review:
          type: array
          items:
            $ref: "#/components/schemas/Review"
      required:
        - id
        - email
        - roq_user_id
        - tenant_id
        - created_at
        - updated_at
    MenuWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/MenuWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        category:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
    MenuOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        price:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        category:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        restaurant_id:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        restaurant:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
    MenuWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/MenuWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        category:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
    MenuScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        category:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    OrderWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrderWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        total_price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        status:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    OrderOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        date:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        total_price:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user_id:
          $ref: "#/components/schemas/SortOrder"
        restaurant_id:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        restaurant:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    OrderWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrderWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereInput"
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        total_price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        status:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    OrderScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
        total_price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        status:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    ReservationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReservationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        time:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        number_of_people:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        table_number:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ReservationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        date:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        time:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        number_of_people:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        table_number:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user_id:
          $ref: "#/components/schemas/SortOrder"
        restaurant_id:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        restaurant:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    ReservationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReservationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereInput"
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        time:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        number_of_people:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        table_number:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ReservationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
        time:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        number_of_people:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        table_number:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    RestaurantWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestaurantWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        address:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        opening_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        closing_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        menu:
          $ref: "#/components/schemas/MenuListRelationFilter"
        order:
          $ref: "#/components/schemas/OrderListRelationFilter"
        reservation:
          $ref: "#/components/schemas/ReservationListRelationFilter"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        review:
          $ref: "#/components/schemas/ReviewListRelationFilter"
    RestaurantOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        address:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        opening_hours:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        closing_hours:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        name:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        user_id:
          $ref: "#/components/schemas/SortOrder"
        tenant_id:
          $ref: "#/components/schemas/SortOrder"
        menu:
          $ref: "#/components/schemas/MenuOrderByRelationAggregateInput"
        order:
          $ref: "#/components/schemas/OrderOrderByRelationAggregateInput"
        reservation:
          $ref: "#/components/schemas/ReservationOrderByRelationAggregateInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        review:
          $ref: "#/components/schemas/ReviewOrderByRelationAggregateInput"
    RestaurantWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestaurantWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereInput"
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        address:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        opening_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        closing_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        menu:
          $ref: "#/components/schemas/MenuListRelationFilter"
        order:
          $ref: "#/components/schemas/OrderListRelationFilter"
        reservation:
          $ref: "#/components/schemas/ReservationListRelationFilter"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        review:
          $ref: "#/components/schemas/ReviewListRelationFilter"
    RestaurantScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        address:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        opening_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        closing_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    ReviewWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReviewWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        rating:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        comment:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ReviewOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        rating:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        comment:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        date:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user_id:
          $ref: "#/components/schemas/SortOrder"
        restaurant_id:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        restaurant:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    ReviewWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReviewWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereInput"
        rating:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        comment:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        restaurant:
          oneOf:
            - $ref: "#/components/schemas/RestaurantRelationFilter"
            - $ref: "#/components/schemas/RestaurantWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ReviewScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        rating:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        comment:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        firstName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        lastName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        roq_user_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        order:
          $ref: "#/components/schemas/OrderListRelationFilter"
        reservation:
          $ref: "#/components/schemas/ReservationListRelationFilter"
        restaurant:
          $ref: "#/components/schemas/RestaurantListRelationFilter"
        review:
          $ref: "#/components/schemas/ReviewListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        email:
          $ref: "#/components/schemas/SortOrder"
        firstName:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        lastName:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        roq_user_id:
          $ref: "#/components/schemas/SortOrder"
        tenant_id:
          $ref: "#/components/schemas/SortOrder"
        created_at:
          $ref: "#/components/schemas/SortOrder"
        updated_at:
          $ref: "#/components/schemas/SortOrder"
        order:
          $ref: "#/components/schemas/OrderOrderByRelationAggregateInput"
        reservation:
          $ref: "#/components/schemas/ReservationOrderByRelationAggregateInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantOrderByRelationAggregateInput"
        review:
          $ref: "#/components/schemas/ReviewOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        firstName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        lastName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        roq_user_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        order:
          $ref: "#/components/schemas/OrderListRelationFilter"
        reservation:
          $ref: "#/components/schemas/ReservationListRelationFilter"
        restaurant:
          $ref: "#/components/schemas/RestaurantListRelationFilter"
        review:
          $ref: "#/components/schemas/ReviewListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidWithAggregatesFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        firstName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        lastName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        roq_user_id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    MenuCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutMenuInput"
      required:
        - name
        - restaurant
    MenuUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        category:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutMenuNestedInput"
    MenuCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - restaurant_id
    MenuUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        category:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrderCreateInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutOrderInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrderInput"
      required:
        - restaurant
        - user
    OrderUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutOrderNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrderNestedInput"
    OrderCreateManyInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
        - restaurant_id
    OrderUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReservationCreateInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutReservationInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReservationInput"
      required:
        - restaurant
        - user
    ReservationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutReservationNested\
            Input"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReservationNestedInput"
    ReservationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
        - restaurant_id
    ReservationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RestaurantCreateInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutRestaurantInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutRestaurantInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutRestaurantInput"
      required:
        - name
        - tenant_id
        - user
    RestaurantUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutRestaurantNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutRestaurantNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutRestaurantNestedInput"
    RestaurantCreateManyInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
      required:
        - name
        - user_id
        - tenant_id
    RestaurantUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ReviewCreateInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutReviewInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReviewInput"
      required:
        - restaurant
        - user
    ReviewUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutReviewNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReviewNestedInput"
    ReviewCreateManyInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
        - restaurant_id
    ReviewUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutUserInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutUserInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutUserNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutUserNestedInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UuidFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedUuidFilter"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    RestaurantRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/RestaurantWhereInput"
        isNot:
          $ref: "#/components/schemas/RestaurantWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    UuidWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedUuidWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    UserRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    MenuListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/MenuWhereInput"
        some:
          $ref: "#/components/schemas/MenuWhereInput"
        none:
          $ref: "#/components/schemas/MenuWhereInput"
    OrderListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/OrderWhereInput"
        some:
          $ref: "#/components/schemas/OrderWhereInput"
        none:
          $ref: "#/components/schemas/OrderWhereInput"
    ReservationListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ReservationWhereInput"
        some:
          $ref: "#/components/schemas/ReservationWhereInput"
        none:
          $ref: "#/components/schemas/ReservationWhereInput"
    ReviewListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ReviewWhereInput"
        some:
          $ref: "#/components/schemas/ReviewWhereInput"
        none:
          $ref: "#/components/schemas/ReviewWhereInput"
    MenuOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    OrderOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    ReservationOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    ReviewOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    RestaurantListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/RestaurantWhereInput"
        some:
          $ref: "#/components/schemas/RestaurantWhereInput"
        none:
          $ref: "#/components/schemas/RestaurantWhereInput"
    RestaurantOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    RestaurantCreateNestedOneWithoutMenuInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutMenuInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutMenuInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableIntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    RestaurantUpdateOneRequiredWithoutMenuNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutMenuInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutMenuInput"
        upsert:
          $ref: "#/components/schemas/RestaurantUpsertWithoutMenuInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateToOneWithWhereWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUpdateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutMenuInput"
    RestaurantCreateNestedOneWithoutOrderInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutOrderInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutOrderInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    UserCreateNestedOneWithoutOrderInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrderInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrderInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    RestaurantUpdateOneRequiredWithoutOrderNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutOrderInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutOrderInput"
        upsert:
          $ref: "#/components/schemas/RestaurantUpsertWithoutOrderInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateToOneWithWhereWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutOrderInput"
    UserUpdateOneRequiredWithoutOrderNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrderInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrderInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutOrderInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutOrderInput"
            - $ref: "#/components/schemas/UserUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrderInput"
    RestaurantCreateNestedOneWithoutReservationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReservationInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutReservationInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    UserCreateNestedOneWithoutReservationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReservationInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReservationInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    RestaurantUpdateOneRequiredWithoutReservationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReservationInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutReservationInput"
        upsert:
          $ref: "#/components/schemas/RestaurantUpsertWithoutReservationInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateToOneWithWhereWithoutReservationInp\
                ut"
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReservationInput"
    UserUpdateOneRequiredWithoutReservationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReservationInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReservationInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutReservationInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutReservationInput"
            - $ref: "#/components/schemas/UserUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReservationInput"
    MenuCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/MenuCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
    OrderCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
    ReservationCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
    UserCreateNestedOneWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutRestaurantInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    ReviewCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
    MenuUncheckedCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/MenuCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
    OrderUncheckedCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
    ReservationUncheckedCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
    ReviewUncheckedCreateNestedManyWithoutRestaurantInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyRestaurantInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
    MenuUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/MenuUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/MenuCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereInput"
    OrderUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
    ReservationUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutRestaurantIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutRestaurantIn\
                  put"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutRestaurantIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutRestaurantIn\
                  put"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutRestaurantInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutRestaurantInpu\
                  t"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
    UserUpdateOneRequiredWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutRestaurantInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutRestaurantInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutRestaurantInput"
    ReviewUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
    MenuUncheckedUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/MenuUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/MenuCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/MenuWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereInput"
    OrderUncheckedUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
    ReservationUncheckedUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutRestaurantIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutRestaurantIn\
                  put"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutRestaurantIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutRestaurantIn\
                  put"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutRestaurantInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutRestaurantInpu\
                  t"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
    ReviewUncheckedUpdateManyWithoutRestaurantNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutRestaurantInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutRestaurantInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyRestaurantInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutRestaurantInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutRestaurantInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
    RestaurantCreateNestedOneWithoutReviewInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReviewInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutReviewInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    UserCreateNestedOneWithoutReviewInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReviewInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReviewInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    RestaurantUpdateOneRequiredWithoutReviewNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReviewInput"
        connectOrCreate:
          $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutReviewInput"
        upsert:
          $ref: "#/components/schemas/RestaurantUpsertWithoutReviewInput"
        connect:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateToOneWithWhereWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReviewInput"
    UserUpdateOneRequiredWithoutReviewNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReviewInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReviewInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutReviewInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutReviewInput"
            - $ref: "#/components/schemas/UserUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReviewInput"
    OrderCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
    ReservationCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
    RestaurantCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/RestaurantCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    ReviewCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
    OrderUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
    ReservationUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
    RestaurantUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/RestaurantCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
    ReviewUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
    OrderUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
    ReservationUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
    RestaurantUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/RestaurantCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereInput"
    ReviewUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
    OrderUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrderCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrderWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
    ReservationUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReservationCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReservationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
    RestaurantUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/RestaurantCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestaurantWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereInput"
    ReviewUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ReviewCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ReviewWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
    NestedUuidFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedUuidFilter"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedUuidWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedUuidWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedFloatNullableFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatNullableFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    RestaurantCreateWithoutMenuInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutRestaurantInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutRestaurantInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutRestaurantInput"
      required:
        - name
        - tenant_id
        - user
    RestaurantUncheckedCreateWithoutMenuInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutRestaurantInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutRestaura\
            ntInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutRestaurantInp\
            ut"
      required:
        - name
        - user_id
        - tenant_id
    RestaurantCreateOrConnectWithoutMenuInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutMenuInput"
      required:
        - where
        - create
    RestaurantUpsertWithoutMenuInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutMenuInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutMenuInput"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
      required:
        - update
        - create
    RestaurantUpdateToOneWithWhereWithoutMenuInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutMenuInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutMenuInput"
      required:
        - data
    RestaurantUpdateWithoutMenuInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutRestaurantNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutRestaurantNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutRestaurantNestedInput"
    RestaurantUncheckedUpdateWithoutMenuInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutRestaurantNestedInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutRestaurantNest\
            edInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutRestaurantNestedInp\
            ut"
    RestaurantCreateWithoutOrderInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutRestaurantInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutRestaurantInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutRestaurantInput"
      required:
        - name
        - tenant_id
        - user
    RestaurantUncheckedCreateWithoutOrderInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuUncheckedCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutRestaura\
            ntInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutRestaurantInp\
            ut"
      required:
        - name
        - user_id
        - tenant_id
    RestaurantCreateOrConnectWithoutOrderInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutOrderInput"
      required:
        - where
        - create
    UserCreateWithoutOrderInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutUserInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUncheckedCreateWithoutOrderInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutUserInpu\
            t"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserCreateOrConnectWithoutOrderInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrderInput"
      required:
        - where
        - create
    RestaurantUpsertWithoutOrderInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutOrderInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutOrderInput"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
      required:
        - update
        - create
    RestaurantUpdateToOneWithWhereWithoutOrderInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutOrderInput"
      required:
        - data
    RestaurantUpdateWithoutOrderInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutRestaurantNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutRestaurantNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutRestaurantNestedInput"
    RestaurantUncheckedUpdateWithoutOrderInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUncheckedUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutRestaurantNest\
            edInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutRestaurantNestedInp\
            ut"
    UserUpsertWithoutOrderInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrderInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrderInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutOrderInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrderInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrderInput"
      required:
        - data
    UserUpdateWithoutOrderInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutUserNestedInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutOrderInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutUserNestedInpu\
            t"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutUserNestedInput"
    RestaurantCreateWithoutReservationInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutRestaurantInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutRestaurantInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutRestaurantInput"
      required:
        - name
        - tenant_id
        - user
    RestaurantUncheckedCreateWithoutReservationInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuUncheckedCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutRestaurantInpu\
            t"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutRestaurantInp\
            ut"
      required:
        - name
        - user_id
        - tenant_id
    RestaurantCreateOrConnectWithoutReservationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReservationInput"
      required:
        - where
        - create
    UserCreateWithoutReservationInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutUserInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUncheckedCreateWithoutReservationInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutUserInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserCreateOrConnectWithoutReservationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReservationInput"
      required:
        - where
        - create
    RestaurantUpsertWithoutReservationInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReservationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReservationInput"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
      required:
        - update
        - create
    RestaurantUpdateToOneWithWhereWithoutReservationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReservationInput"
      required:
        - data
    RestaurantUpdateWithoutReservationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutRestaurantNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutRestaurantNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutRestaurantNestedInput"
    RestaurantUncheckedUpdateWithoutReservationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUncheckedUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutRestaurantNestedInpu\
            t"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutRestaurantNestedInp\
            ut"
    UserUpsertWithoutReservationInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReservationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReservationInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutReservationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReservationInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReservationInput"
      required:
        - data
    UserUpdateWithoutReservationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutUserNestedInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutReservationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutUserNestedInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutUserNestedInput"
    MenuCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
    MenuUncheckedCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
    MenuCreateOrConnectWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - create
    MenuCreateManyRestaurantInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateManyRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuCreateManyRestaurantInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrderCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrderInput"
      required:
        - user
    OrderUncheckedCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    OrderCreateOrConnectWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - create
    OrderCreateManyRestaurantInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateManyRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateManyRestaurantInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ReservationCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReservationInput"
      required:
        - user
    ReservationUncheckedCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    ReservationCreateOrConnectWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - create
    ReservationCreateManyRestaurantInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateManyRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateManyRestaurantInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    UserCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutUserInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutUserInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUncheckedCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutUserInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutUserInpu\
            t"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserCreateOrConnectWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - create
    ReviewCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReviewInput"
      required:
        - user
    ReviewUncheckedCreateWithoutRestaurantInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    ReviewCreateOrConnectWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - create
    ReviewCreateManyRestaurantInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateManyRestaurantInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateManyRestaurantInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    MenuUpsertWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedUpdateWithoutRestaurantInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/MenuCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - update
        - create
    MenuUpdateWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/MenuUncheckedUpdateWithoutRestaurantInput"
      required:
        - where
        - data
    MenuUpdateManyWithWhereWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/MenuUpdateManyMutationInput"
            - $ref: "#/components/schemas/MenuUncheckedUpdateManyWithoutRestaurantInput"
      required:
        - where
        - data
    MenuScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/MenuScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/MenuScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/MenuScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        category:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    OrderUpsertWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateWithoutRestaurantInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - update
        - create
    OrderUpdateWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateWithoutRestaurantInput"
      required:
        - where
        - data
    OrderUpdateManyWithWhereWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyMutationInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutRestaurantInput"
      required:
        - where
        - data
    OrderScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrderScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrderScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        total_price:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        status:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    ReservationUpsertWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateWithoutRestaurantInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - update
        - create
    ReservationUpdateWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateWithoutRestaurantInput"
      required:
        - where
        - data
    ReservationUpdateManyWithWhereWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyMutationInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutRestaurantInpu\
                t"
      required:
        - where
        - data
    ReservationScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReservationScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReservationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        time:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        number_of_people:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        table_number:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    UserUpsertWithoutRestaurantInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutRestaurantInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutRestaurantInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutRestaurantInput"
      required:
        - data
    UserUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutUserNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutUserNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutUserNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutUserNestedInpu\
            t"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutUserNestedInput"
    ReviewUpsertWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateWithoutRestaurantInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutRestaurantInput"
      required:
        - where
        - update
        - create
    ReviewUpdateWithWhereUniqueWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithoutRestaurantInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateWithoutRestaurantInput"
      required:
        - where
        - data
    ReviewUpdateManyWithWhereWithoutRestaurantInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyMutationInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutRestaurantInput"
      required:
        - where
        - data
    ReviewScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ReviewScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ReviewScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        rating:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        comment:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        date:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        restaurant_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    RestaurantCreateWithoutReviewInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutRestaurantInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutRestaurantInput"
      required:
        - name
        - tenant_id
        - user
    RestaurantUncheckedCreateWithoutReviewInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuUncheckedCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutRestaurantInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutRestaura\
            ntInput"
      required:
        - name
        - user_id
        - tenant_id
    RestaurantCreateOrConnectWithoutReviewInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReviewInput"
      required:
        - where
        - create
    UserCreateWithoutReviewInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutUserInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutUserInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserUncheckedCreateWithoutReviewInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutUserInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutUserInpu\
            t"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedCreateNestedManyWithoutUserInput"
      required:
        - email
        - roq_user_id
        - tenant_id
    UserCreateOrConnectWithoutReviewInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReviewInput"
      required:
        - where
        - create
    RestaurantUpsertWithoutReviewInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReviewInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutReviewInput"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
      required:
        - update
        - create
    RestaurantUpdateToOneWithWhereWithoutReviewInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutReviewInput"
      required:
        - data
    RestaurantUpdateWithoutReviewInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutRestaurantNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutRestaurantNestedInput"
    RestaurantUncheckedUpdateWithoutReviewInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUncheckedUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutRestaurantNestedInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutRestaurantNest\
            edInput"
    UserUpsertWithoutReviewInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReviewInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReviewInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutReviewInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReviewInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReviewInput"
      required:
        - data
    UserUpdateWithoutReviewInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutUserNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutUserNestedInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutReviewInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        firstName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        lastName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        roq_user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutUserNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutUserNestedInpu\
            t"
        restaurant:
          $ref: "#/components/schemas/RestaurantUncheckedUpdateManyWithoutUserNestedInput"
    OrderCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutOrderInput"
      required:
        - restaurant
    OrderUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    OrderCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    OrderCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrderCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ReservationCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutReservationInput"
      required:
        - restaurant
    ReservationUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    ReservationCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    ReservationCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReservationCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RestaurantCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderCreateNestedManyWithoutRestaurantInput"
        reservation:
          $ref: "#/components/schemas/ReservationCreateNestedManyWithoutRestaurantInput"
        review:
          $ref: "#/components/schemas/ReviewCreateNestedManyWithoutRestaurantInput"
      required:
        - name
        - tenant_id
    RestaurantUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
        menu:
          $ref: "#/components/schemas/MenuUncheckedCreateNestedManyWithoutRestaurantInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedCreateNestedManyWithoutRestaurantInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedCreateNestedManyWithoutRestaura\
            ntInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedCreateNestedManyWithoutRestaurantInp\
            ut"
      required:
        - name
        - tenant_id
    RestaurantCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    RestaurantCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ReviewCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        restaurant:
          $ref: "#/components/schemas/RestaurantCreateNestedOneWithoutReviewInput"
      required:
        - restaurant
    ReviewUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    ReviewCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    ReviewCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ReviewCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrderUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrderCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    OrderUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateWithoutUserInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    OrderUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrderUpdateManyMutationInput"
            - $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    ReservationUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReservationCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    ReservationUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    ReservationUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReservationUpdateManyMutationInput"
            - $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    RestaurantUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestaurantCreateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    RestaurantUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateWithoutUserInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    RestaurantUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestaurantUpdateManyMutationInput"
            - $ref: "#/components/schemas/RestaurantUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    RestaurantScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestaurantScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestaurantScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestaurantScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        address:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        opening_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        closing_hours:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        created_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updated_at:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user_id:
          oneOf:
            - $ref: "#/components/schemas/UuidFilter"
            - type: string
        tenant_id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    ReviewUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ReviewCreateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    ReviewUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    ReviewUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ReviewUpdateManyMutationInput"
            - $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    MenuCreateManyRestaurantInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
    OrderCreateManyRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    ReservationCreateManyRestaurantInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    ReviewCreateManyRestaurantInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
    MenuUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        category:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    MenuUncheckedUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        category:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    MenuUncheckedUpdateManyWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        category:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrderUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrderNestedInput"
    OrderUncheckedUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrderUncheckedUpdateManyWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReservationUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReservationNestedInput"
    ReservationUncheckedUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReservationUncheckedUpdateManyWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReviewUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReviewNestedInput"
    ReviewUncheckedUpdateWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReviewUncheckedUpdateManyWithoutRestaurantInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        user_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrderCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    ReservationCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    RestaurantCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tenant_id:
          type: string
      required:
        - name
        - tenant_id
    ReviewCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - restaurant_id
    OrderUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutOrderNestedInput"
    OrderUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrderUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        total_price:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReservationUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutReservationNested\
            Input"
    ReservationUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReservationUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        time:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        number_of_people:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        table_number:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RestaurantUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUpdateManyWithoutRestaurantNestedInput"
        reservation:
          $ref: "#/components/schemas/ReservationUpdateManyWithoutRestaurantNestedInput"
        review:
          $ref: "#/components/schemas/ReviewUpdateManyWithoutRestaurantNestedInput"
    RestaurantUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        menu:
          $ref: "#/components/schemas/MenuUncheckedUpdateManyWithoutRestaurantNestedInput"
        order:
          $ref: "#/components/schemas/OrderUncheckedUpdateManyWithoutRestaurantNestedInpu\
            t"
        reservation:
          $ref: "#/components/schemas/ReservationUncheckedUpdateManyWithoutRestaurantNest\
            edInput"
        review:
          $ref: "#/components/schemas/ReviewUncheckedUpdateManyWithoutRestaurantNestedInp\
            ut"
    RestaurantUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        address:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        opening_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        closing_hours:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        tenant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ReviewUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        restaurant:
          $ref: "#/components/schemas/RestaurantUpdateOneRequiredWithoutReviewNestedInput"
    ReviewUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ReviewUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rating:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        comment:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        date:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        restaurant_id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        created_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RestaurantArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    MenuInclude:
      type: object
      properties:
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
    OrderInclude:
      type: object
      properties:
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    ReservationInclude:
      type: object
      properties:
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    RestaurantInclude:
      type: object
      properties:
        menu:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/MenuFindManyArgs"
        order:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrderFindManyArgs"
        reservation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReservationFindManyArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        review:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReviewFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantCountOutputTypeArgs"
    ReviewInclude:
      type: object
      properties:
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserInclude:
      type: object
      properties:
        order:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrderFindManyArgs"
        reservation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReservationFindManyArgs"
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantFindManyArgs"
        review:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReviewFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    RestaurantCountOutputTypeSelect:
      type: object
      properties:
        menu:
          type: boolean
        order:
          type: boolean
        reservation:
          type: boolean
        review:
          type: boolean
    UserCountOutputTypeSelect:
      type: object
      properties:
        order:
          type: boolean
        reservation:
          type: boolean
        restaurant:
          type: boolean
        review:
          type: boolean
    RestaurantCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestaurantCountOutputTypeSelect"
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    MenuSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        price:
          type: boolean
        category:
          type: boolean
        restaurant_id:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
    OrderSelect:
      type: object
      properties:
        id:
          type: boolean
        date:
          type: boolean
        total_price:
          type: boolean
        status:
          type: boolean
        user_id:
          type: boolean
        restaurant_id:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    ReservationSelect:
      type: object
      properties:
        id:
          type: boolean
        date:
          type: boolean
        time:
          type: boolean
        number_of_people:
          type: boolean
        table_number:
          type: boolean
        user_id:
          type: boolean
        restaurant_id:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    RestaurantSelect:
      type: object
      properties:
        id:
          type: boolean
        description:
          type: boolean
        address:
          type: boolean
        opening_hours:
          type: boolean
        closing_hours:
          type: boolean
        name:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        user_id:
          type: boolean
        tenant_id:
          type: boolean
        menu:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/MenuFindManyArgs"
        order:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrderFindManyArgs"
        reservation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReservationFindManyArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        review:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReviewFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantCountOutputTypeArgs"
    ReviewSelect:
      type: object
      properties:
        id:
          type: boolean
        rating:
          type: boolean
        comment:
          type: boolean
        date:
          type: boolean
        user_id:
          type: boolean
        restaurant_id:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        email:
          type: boolean
        firstName:
          type: boolean
        lastName:
          type: boolean
        roq_user_id:
          type: boolean
        tenant_id:
          type: boolean
        created_at:
          type: boolean
        updated_at:
          type: boolean
        order:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrderFindManyArgs"
        reservation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReservationFindManyArgs"
        restaurant:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestaurantFindManyArgs"
        review:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ReviewFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    AggregateMenu:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/MenuCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/MenuAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/MenuSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/MenuMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/MenuMaxAggregateOutputType"
    MenuGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/MenuCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/MenuAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/MenuSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/MenuMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/MenuMaxAggregateOutputType"
      required:
        - id
        - name
        - restaurant_id
        - created_at
        - updated_at
    AggregateOrder:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/OrderCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/OrderAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/OrderSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/OrderMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/OrderMaxAggregateOutputType"
    OrderGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/OrderCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/OrderAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/OrderSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/OrderMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/OrderMaxAggregateOutputType"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    AggregateReservation:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/ReservationCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ReservationAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ReservationSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ReservationMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ReservationMaxAggregateOutputType"
    ReservationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/ReservationCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ReservationAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ReservationSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ReservationMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ReservationMaxAggregateOutputType"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    AggregateRestaurant:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/RestaurantCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/RestaurantMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/RestaurantMaxAggregateOutputType"
    RestaurantGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
        _count:
          $ref: "#/components/schemas/RestaurantCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/RestaurantMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/RestaurantMaxAggregateOutputType"
      required:
        - id
        - name
        - created_at
        - updated_at
        - user_id
        - tenant_id
    AggregateReview:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/ReviewCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ReviewAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ReviewSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ReviewMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ReviewMaxAggregateOutputType"
    ReviewGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/ReviewCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ReviewAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ReviewSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ReviewMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ReviewMaxAggregateOutputType"
      required:
        - id
        - user_id
        - restaurant_id
        - created_at
        - updated_at
    AggregateUser:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - email
        - roq_user_id
        - tenant_id
        - created_at
        - updated_at
    MenuCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        description:
          type: integer
        price:
          type: integer
        category:
          type: integer
        restaurant_id:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - description
        - price
        - category
        - restaurant_id
        - created_at
        - updated_at
        - _all
    MenuAvgAggregateOutputType:
      type: object
      properties:
        price:
          type: number
    MenuSumAggregateOutputType:
      type: object
      properties:
        price:
          type: integer
    MenuMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    MenuMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        category:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    OrderCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        date:
          type: integer
        total_price:
          type: integer
        status:
          type: integer
        user_id:
          type: integer
        restaurant_id:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        _all:
          type: integer
      required:
        - id
        - date
        - total_price
        - status
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - _all
    OrderAvgAggregateOutputType:
      type: object
      properties:
        total_price:
          type: number
    OrderSumAggregateOutputType:
      type: object
      properties:
        total_price:
          type: integer
    OrderMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    OrderMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        total_price:
          type: integer
        status:
          type: string
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ReservationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        date:
          type: integer
        time:
          type: integer
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: integer
        restaurant_id:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        _all:
          type: integer
      required:
        - id
        - date
        - time
        - number_of_people
        - table_number
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - _all
    ReservationAvgAggregateOutputType:
      type: object
      properties:
        number_of_people:
          type: number
        table_number:
          type: number
    ReservationSumAggregateOutputType:
      type: object
      properties:
        number_of_people:
          type: integer
        table_number:
          type: integer
    ReservationMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ReservationMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
        number_of_people:
          type: integer
        table_number:
          type: integer
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    RestaurantCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        description:
          type: integer
        address:
          type: integer
        opening_hours:
          type: integer
        closing_hours:
          type: integer
        name:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        user_id:
          type: integer
        tenant_id:
          type: integer
        _all:
          type: integer
      required:
        - id
        - description
        - address
        - opening_hours
        - closing_hours
        - name
        - created_at
        - updated_at
        - user_id
        - tenant_id
        - _all
    RestaurantMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
    RestaurantMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        address:
          type: string
        opening_hours:
          type: string
        closing_hours:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
        tenant_id:
          type: string
    ReviewCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        rating:
          type: integer
        comment:
          type: integer
        date:
          type: integer
        user_id:
          type: integer
        restaurant_id:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        _all:
          type: integer
      required:
        - id
        - rating
        - comment
        - date
        - user_id
        - restaurant_id
        - created_at
        - updated_at
        - _all
    ReviewAvgAggregateOutputType:
      type: object
      properties:
        rating:
          type: number
    ReviewSumAggregateOutputType:
      type: object
      properties:
        rating:
          type: integer
    ReviewMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ReviewMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        date:
          type: string
          format: date-time
        user_id:
          type: string
        restaurant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        email:
          type: integer
        firstName:
          type: integer
        lastName:
          type: integer
        roq_user_id:
          type: integer
        tenant_id:
          type: integer
        created_at:
          type: integer
        updated_at:
          type: integer
        _all:
          type: integer
      required:
        - id
        - email
        - firstName
        - lastName
        - roq_user_id
        - tenant_id
        - created_at
        - updated_at
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roq_user_id:
          type: string
        tenant_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    _Meta:
      type: object
      properties:
        meta:
          type: object
          description: Meta information about the request or response
          properties:
            serialization:
              description: Serialization metadata
          additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    MenuCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        data:
          $ref: "#/components/schemas/MenuCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/MenuCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        data:
          $ref: "#/components/schemas/MenuUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        data:
          $ref: "#/components/schemas/MenuUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        create:
          $ref: "#/components/schemas/MenuCreateInput"
        update:
          $ref: "#/components/schemas/MenuUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        include:
          $ref: "#/components/schemas/MenuInclude"
        where:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/MenuSelect"
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        orderBy:
          $ref: "#/components/schemas/MenuOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/MenuWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    MenuGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/MenuWhereInput"
        orderBy:
          $ref: "#/components/schemas/MenuOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/MenuScalarFieldEnum"
        having:
          $ref: "#/components/schemas/MenuScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        data:
          $ref: "#/components/schemas/OrderCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/OrderCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        data:
          $ref: "#/components/schemas/OrderUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        data:
          $ref: "#/components/schemas/OrderUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        create:
          $ref: "#/components/schemas/OrderCreateInput"
        update:
          $ref: "#/components/schemas/OrderUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        include:
          $ref: "#/components/schemas/OrderInclude"
        where:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrderSelect"
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrderOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/OrderWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    OrderGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrderWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrderOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/OrderScalarFieldEnum"
        having:
          $ref: "#/components/schemas/OrderScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        data:
          $ref: "#/components/schemas/ReservationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/ReservationCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ReservationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        data:
          $ref: "#/components/schemas/ReservationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ReservationCreateInput"
        update:
          $ref: "#/components/schemas/ReservationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        include:
          $ref: "#/components/schemas/ReservationInclude"
        where:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReservationSelect"
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ReservationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ReservationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    ReservationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReservationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ReservationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ReservationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ReservationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        data:
          $ref: "#/components/schemas/RestaurantCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/RestaurantCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        data:
          $ref: "#/components/schemas/RestaurantUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        data:
          $ref: "#/components/schemas/RestaurantUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        create:
          $ref: "#/components/schemas/RestaurantCreateInput"
        update:
          $ref: "#/components/schemas/RestaurantUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        include:
          $ref: "#/components/schemas/RestaurantInclude"
        where:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestaurantSelect"
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        orderBy:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/RestaurantWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    RestaurantGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestaurantWhereInput"
        orderBy:
          $ref: "#/components/schemas/RestaurantOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/RestaurantScalarFieldEnum"
        having:
          $ref: "#/components/schemas/RestaurantScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        data:
          $ref: "#/components/schemas/ReviewCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/ReviewCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ReviewUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        data:
          $ref: "#/components/schemas/ReviewUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ReviewCreateInput"
        update:
          $ref: "#/components/schemas/ReviewUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        include:
          $ref: "#/components/schemas/ReviewInclude"
        where:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ReviewSelect"
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        orderBy:
          $ref: "#/components/schemas/ReviewOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ReviewWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    ReviewGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ReviewWhereInput"
        orderBy:
          $ref: "#/components/schemas/ReviewOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ReviewScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/UserCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /menu/create:
    post:
      operationId: createMenu
      description: Create a new Menu
      tags:
        - menu
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuCreateArgs"
  /menu/createMany:
    post:
      operationId: createManyMenu
      description: Create several Menu
      tags:
        - menu
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuCreateManyArgs"
  /menu/findUnique:
    get:
      operationId: findUniqueMenu
      description: Find one unique Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/findFirst:
    get:
      operationId: findFirstMenu
      description: Find the first Menu matching the given condition
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/findMany:
    get:
      operationId: findManyMenu
      description: Find a list of Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/update:
    patch:
      operationId: updateMenu
      description: Update a Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuUpdateArgs"
  /menu/updateMany:
    patch:
      operationId: updateManyMenu
      description: Update Menus matching the given condition
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuUpdateManyArgs"
  /menu/upsert:
    post:
      operationId: upsertMenu
      description: Upsert a Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuUpsertArgs"
  /menu/delete:
    delete:
      operationId: deleteMenu
      description: Delete one unique Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Menu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/deleteMany:
    delete:
      operationId: deleteManyMenu
      description: Delete Menus matching the given condition
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/count:
    get:
      operationId: countMenu
      description: Find a list of Menu
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/MenuCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/aggregate:
    get:
      operationId: aggregateMenu
      description: Aggregate Menus
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateMenu"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /menu/groupBy:
    get:
      operationId: groupByMenu
      description: Group Menus by fields
      tags:
        - menu
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/MenuGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/create:
    post:
      operationId: createOrder
      description: Create a new Order
      tags:
        - order
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateArgs"
  /order/createMany:
    post:
      operationId: createManyOrder
      description: Create several Order
      tags:
        - order
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateManyArgs"
  /order/findUnique:
    get:
      operationId: findUniqueOrder
      description: Find one unique Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/findFirst:
    get:
      operationId: findFirstOrder
      description: Find the first Order matching the given condition
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/findMany:
    get:
      operationId: findManyOrder
      description: Find a list of Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/update:
    patch:
      operationId: updateOrder
      description: Update a Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateArgs"
  /order/updateMany:
    patch:
      operationId: updateManyOrder
      description: Update Orders matching the given condition
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateManyArgs"
  /order/upsert:
    post:
      operationId: upsertOrder
      description: Upsert a Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpsertArgs"
  /order/delete:
    delete:
      operationId: deleteOrder
      description: Delete one unique Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/deleteMany:
    delete:
      operationId: deleteManyOrder
      description: Delete Orders matching the given condition
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/count:
    get:
      operationId: countOrder
      description: Find a list of Order
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/OrderCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/aggregate:
    get:
      operationId: aggregateOrder
      description: Aggregate Orders
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateOrder"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /order/groupBy:
    get:
      operationId: groupByOrder
      description: Group Orders by fields
      tags:
        - order
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/create:
    post:
      operationId: createReservation
      description: Create a new Reservation
      tags:
        - reservation
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationCreateArgs"
  /reservation/createMany:
    post:
      operationId: createManyReservation
      description: Create several Reservation
      tags:
        - reservation
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationCreateManyArgs"
  /reservation/findUnique:
    get:
      operationId: findUniqueReservation
      description: Find one unique Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/findFirst:
    get:
      operationId: findFirstReservation
      description: Find the first Reservation matching the given condition
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/findMany:
    get:
      operationId: findManyReservation
      description: Find a list of Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/update:
    patch:
      operationId: updateReservation
      description: Update a Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationUpdateArgs"
  /reservation/updateMany:
    patch:
      operationId: updateManyReservation
      description: Update Reservations matching the given condition
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationUpdateManyArgs"
  /reservation/upsert:
    post:
      operationId: upsertReservation
      description: Upsert a Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationUpsertArgs"
  /reservation/delete:
    delete:
      operationId: deleteReservation
      description: Delete one unique Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Reservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/deleteMany:
    delete:
      operationId: deleteManyReservation
      description: Delete Reservations matching the given condition
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/count:
    get:
      operationId: countReservation
      description: Find a list of Reservation
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ReservationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/aggregate:
    get:
      operationId: aggregateReservation
      description: Aggregate Reservations
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateReservation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /reservation/groupBy:
    get:
      operationId: groupByReservation
      description: Group Reservations by fields
      tags:
        - reservation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ReservationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/create:
    post:
      operationId: createRestaurant
      description: Create a new Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantCreateArgs"
  /restaurant/createMany:
    post:
      operationId: createManyRestaurant
      description: Create several Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantCreateManyArgs"
  /restaurant/findUnique:
    get:
      operationId: findUniqueRestaurant
      description: Find one unique Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/findFirst:
    get:
      operationId: findFirstRestaurant
      description: Find the first Restaurant matching the given condition
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/findMany:
    get:
      operationId: findManyRestaurant
      description: Find a list of Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/update:
    patch:
      operationId: updateRestaurant
      description: Update a Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantUpdateArgs"
  /restaurant/updateMany:
    patch:
      operationId: updateManyRestaurant
      description: Update Restaurants matching the given condition
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantUpdateManyArgs"
  /restaurant/upsert:
    post:
      operationId: upsertRestaurant
      description: Upsert a Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantUpsertArgs"
  /restaurant/delete:
    delete:
      operationId: deleteRestaurant
      description: Delete one unique Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/deleteMany:
    delete:
      operationId: deleteManyRestaurant
      description: Delete Restaurants matching the given condition
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/count:
    get:
      operationId: countRestaurant
      description: Find a list of Restaurant
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/RestaurantCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/aggregate:
    get:
      operationId: aggregateRestaurant
      description: Aggregate Restaurants
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateRestaurant"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restaurant/groupBy:
    get:
      operationId: groupByRestaurant
      description: Group Restaurants by fields
      tags:
        - restaurant
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestaurantGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/create:
    post:
      operationId: createReview
      description: Create a new Review
      tags:
        - review
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewCreateArgs"
  /review/createMany:
    post:
      operationId: createManyReview
      description: Create several Review
      tags:
        - review
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewCreateManyArgs"
  /review/findUnique:
    get:
      operationId: findUniqueReview
      description: Find one unique Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/findFirst:
    get:
      operationId: findFirstReview
      description: Find the first Review matching the given condition
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/findMany:
    get:
      operationId: findManyReview
      description: Find a list of Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/update:
    patch:
      operationId: updateReview
      description: Update a Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewUpdateArgs"
  /review/updateMany:
    patch:
      operationId: updateManyReview
      description: Update Reviews matching the given condition
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewUpdateManyArgs"
  /review/upsert:
    post:
      operationId: upsertReview
      description: Upsert a Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewUpsertArgs"
  /review/delete:
    delete:
      operationId: deleteReview
      description: Delete one unique Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Review"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/deleteMany:
    delete:
      operationId: deleteManyReview
      description: Delete Reviews matching the given condition
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/count:
    get:
      operationId: countReview
      description: Find a list of Review
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ReviewCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/aggregate:
    get:
      operationId: aggregateReview
      description: Aggregate Reviews
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateReview"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /review/groupBy:
    get:
      operationId: groupByReview
      description: Group Reviews by fields
      tags:
        - review
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ReviewGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
